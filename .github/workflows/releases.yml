name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: ['main', 'release/**']
    paths:
      # Perform a dry-run release when release automation changes are made.
      - '.github/workflows/releases.yml'

env:
  IS_DRY_RUN: github.event == 'pull_request'
  GO_VERSION: '1.20.12'

permissions:
  contents: write
  deployments: write

jobs:
  generate-artifacts:
    runs-on: ubuntu-20.04
    env:
      # Set during setup.
      RELEASE_TAG: ''
      DYNAMIC_BINARY_NAME: ''
      STATIC_BINARY_NAME: ''
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment variables from context (Dry-Run)
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        release_version='0.0.0-dryrun'
        echo "RELEASE_TAG=v${release_version}" >> $GITHUB_ENV
        echo "DYNAMIC_BINARY_NAME=soci-snapshotter-${release_version}-linux-amd64.tar.gz" >> $GITHUB_ENV
        echo "STATIC_BINARY_NAME=soci-snapshotter-${release_version}-linux-amd64-static.tar.gz" >> $GITHUB_ENV
        
        mkdir release
    - name: Setup environment variables from context
      if: ${{ github.event_name == 'push' }}
      run: |
        export release_tag=${GITHUB_REF#refs/*/}
        echo $release_tag
        export release_version=${release_tag/v/} # Remove v from tag name
        echo $release_version

        echo "RELEASE_TAG=${release_tag}" >> $GITHUB_ENV
        echo "DYNAMIC_BINARY_NAME=soci-snapshotter-${release_version}-linux-amd64.tar.gz" >> $GITHUB_ENV
        echo "STATIC_BINARY_NAME=soci-snapshotter-${release_version}-linux-amd64-static.tar.gz" >> $GITHUB_ENV
        
        mkdir release
    - name: Create release binaries
      run: make RELEASE_TAG=${{ env.RELEASE_TAG }} release
    - uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: release/
        if-no-files-found: error

    outputs:
      release_tag: ${{ env.RELEASE_TAG }}
      dynamic_binary_name: ${{ env.DYNAMIC_BINARY_NAME }}
      static_binary_name: ${{ env.STATIC_BINARY_NAME }}
  
  validate-artifacts:
    needs: generate-artifacts
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: artifacts
      - run: bash scripts/verify-release-artifacts.sh ${{ needs.generate-artifacts.outputs.release_tag }}

  create-release:
    if: ${{ github.event_name == 'push' }}
    needs: [generate-artifacts, validate-artifacts]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: artifacts
      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          generate_release_notes: true
          files: |
            ${{ needs.generate-artifacts.outputs.dynamic_binary_name }}
            ${{ needs.generate-artifacts.outputs.dynamic_binary_name }}.sha256sum
            ${{ needs.generate-artifacts.outputs.static_binary_name }}
            ${{ needs.generate-artifacts.outputs.static_binary_name }}.sha256sum
